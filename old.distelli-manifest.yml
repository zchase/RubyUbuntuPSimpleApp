<<<<<<< HEAD
bmcgehee/RubyUbuntuRbenvApp:
=======
<username>/RubyUbuntuPSimpleApp:
>>>>>>> 6de4edb5c24ec4830e2143999b7fc0a5e9d98c4e
  # This Basic Distelli Manifest assumes the following
  # has been provisioned on the destination deploy server:
  #
  # OS: Ubuntu
  #
<<<<<<< HEAD
  
  Env:
    - PORT: 8007
    - STAGE: production
    
  PreInstall:
    - VARRBENV=`which rbenv`
    - if [ "$VARRBENV" ]; then
    -  echo "rbenv already installed."
    - else
    -   sudo apt-get -y update
    -   sudo apt-get -y install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev
    -   echo "===== beginning git clone ====="
    -   git clone git://github.com/sstephenson/rbenv.git ~/.rbenv
    -   echo "===== begining export ====="
    -   pwd
    -   env
    -   echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
    -   export PATH="$HOME/.rbenv/bin:$PATH"
    -   echo "===== beginning eval ====="
    -   pwd
    -   env
    -   echo 'eval "$(rbenv init -)"' >> ~/.bashrc
    -   eval "$(rbenv init -)"
    -   git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
    -   echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc
    -   export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"
    - fi
    - VARRUBY=`ruby -v`
    - if [[ ${VARTEST:0:10} == "ruby 1.9.3" ]]; then
    -   echo "ruby 1.9.3 exists"
    - else
    -   echo "using rbenv to install ruby 1.9.3"
    -   rbenv install -v 1.9.3-p551
    - fi
    - rbenv global 1.9.3-p551
    - ruby -v
    - VARBUNDLE=`which bundle`
    - if [ "$VARBUNDLE" ]; then
    -   echo "bundle already installed"
    - else
    -   gem install bundler
    -   eval "$(rbenv init -)" 
    - fi
    
  Exec: 
    - exec ./bundle/bin/thin start -p $PORT -e $STAGE
    
  PostInstall:
    - echo "begin PostInstall"
    #- bundle install --binstubs $DISTELLI_APPHOME/bundle/bin --standalone --path $DISTELLI_APPHOME/bundle/lib
    - bundle install --binstubs ~/.rbenv/shims/ --standalone --path $DISTELLI_APPHOME/bundle/lib
    - echo "done PostInstall"
    
=======

  Env:
    - PORT: 8003
    - STAGE: production

  PreInstall:
    #
    # Check to see if rvm is already installed
    #
    - if [ -a ~/.rvm/scripts/rvm ]; then
    #
    #   It is already installed
    #
    -   echo "rvm exists"
    #
    - else
    #
    #   Install RVM from rvm.io
    #
    -   echo "rvm does not exist. Installing..."
    -   gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
    -   curl -sSL https://get.rvm.io | bash -s stable --ruby
    - fi
    - source ~/.rvm/scripts/rvm
    #
    # If ruby 1.9.3 is already installed, next command won't actually re-install, so OK.
    #
    - rvm install ruby-1.9.3
    - rvm use 1.9.3
    - gem install bundle

  Exec:
    - source ~/.rvm/scripts/rvm
    - rvm use 1.9.3
    - exec ./bundle/bin/thin start -p $PORT -e $STAGE

  PostInstall:
    - source ~/.rvm/scripts/rvm
    - rvm use 1.9.3
    - bundle install --binstubs $DISTELLI_APPHOME/bundle/bin --standalone --path $DISTELLI_APPHOME/bundle/lib

>>>>>>> 6de4edb5c24ec4830e2143999b7fc0a5e9d98c4e
  PkgInclude:
    - lib/simplerubyapp/*.rb
    - Gemfile
    - config.ru
    - SimpleRubyApp.gemspec
